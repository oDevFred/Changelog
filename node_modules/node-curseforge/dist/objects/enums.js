"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileHashAlgorithms = exports.ModLoaderType = exports.ModStatus = exports.ModsSearchSortField = exports.FileRelationType = exports.FileStatus = exports.ModLoaderInstallMethod = exports.GameVersionTypeStatus = exports.GameVersionStatus = exports.FileReleaseType = exports.CoreApiStatus = exports.CoreStatus = void 0;
var CoreStatus;
(function (CoreStatus) {
    CoreStatus[CoreStatus["DRAFT"] = 1] = "DRAFT";
    CoreStatus[CoreStatus["TEST"] = 2] = "TEST";
    CoreStatus[CoreStatus["PENDING_REVIEW"] = 3] = "PENDING_REVIEW";
    CoreStatus[CoreStatus["REJECTED"] = 4] = "REJECTED";
    CoreStatus[CoreStatus["APPROVED"] = 5] = "APPROVED";
    CoreStatus[CoreStatus["LIVE"] = 6] = "LIVE";
})(CoreStatus = exports.CoreStatus || (exports.CoreStatus = {}));
var CoreApiStatus;
(function (CoreApiStatus) {
    CoreApiStatus[CoreApiStatus["PRIVATE"] = 1] = "PRIVATE";
    CoreApiStatus[CoreApiStatus["PUBLIC"] = 2] = "PUBLIC";
})(CoreApiStatus = exports.CoreApiStatus || (exports.CoreApiStatus = {}));
var FileReleaseType;
(function (FileReleaseType) {
    FileReleaseType[FileReleaseType["RELEASE"] = 1] = "RELEASE";
    FileReleaseType[FileReleaseType["BETA"] = 2] = "BETA";
    FileReleaseType[FileReleaseType["ALPHA"] = 3] = "ALPHA";
})(FileReleaseType = exports.FileReleaseType || (exports.FileReleaseType = {}));
var GameVersionStatus;
(function (GameVersionStatus) {
    GameVersionStatus[GameVersionStatus["APPROVED"] = 1] = "APPROVED";
    GameVersionStatus[GameVersionStatus["DELETED"] = 2] = "DELETED";
    GameVersionStatus[GameVersionStatus["NEW"] = 3] = "NEW";
})(GameVersionStatus = exports.GameVersionStatus || (exports.GameVersionStatus = {}));
var GameVersionTypeStatus;
(function (GameVersionTypeStatus) {
    GameVersionTypeStatus[GameVersionTypeStatus["NORMAL"] = 1] = "NORMAL";
    GameVersionTypeStatus[GameVersionTypeStatus["DELETED"] = 2] = "DELETED";
})(GameVersionTypeStatus = exports.GameVersionTypeStatus || (exports.GameVersionTypeStatus = {}));
var ModLoaderInstallMethod;
(function (ModLoaderInstallMethod) {
    ModLoaderInstallMethod[ModLoaderInstallMethod["FORGE_INSTALLER"] = 1] = "FORGE_INSTALLER";
    ModLoaderInstallMethod[ModLoaderInstallMethod["FORGE_JAR_INSTALL"] = 2] = "FORGE_JAR_INSTALL";
    ModLoaderInstallMethod[ModLoaderInstallMethod["FORGE_INSTALLER_V2"] = 3] = "FORGE_INSTALLER_V2";
})(ModLoaderInstallMethod = exports.ModLoaderInstallMethod || (exports.ModLoaderInstallMethod = {}));
var FileStatus;
(function (FileStatus) {
    FileStatus[FileStatus["PROCESSING"] = 1] = "PROCESSING";
    FileStatus[FileStatus["CHANGES_REQUIRED"] = 2] = "CHANGES_REQUIRED";
    FileStatus[FileStatus["UNDER_REVIEW"] = 3] = "UNDER_REVIEW";
    FileStatus[FileStatus["APPROVED"] = 4] = "APPROVED";
    FileStatus[FileStatus["REJECTED"] = 5] = "REJECTED";
    FileStatus[FileStatus["MALWARE_DETECTED"] = 6] = "MALWARE_DETECTED";
    FileStatus[FileStatus["DELETED"] = 7] = "DELETED";
    FileStatus[FileStatus["ARCHIVED"] = 8] = "ARCHIVED";
    FileStatus[FileStatus["TESTING"] = 9] = "TESTING";
    FileStatus[FileStatus["RELEASED"] = 10] = "RELEASED";
    FileStatus[FileStatus["READY_FOR_REVIEW"] = 11] = "READY_FOR_REVIEW";
    FileStatus[FileStatus["DEPRECATED"] = 12] = "DEPRECATED";
    FileStatus[FileStatus["BAKING"] = 13] = "BAKING";
    FileStatus[FileStatus["AWAITING_PUBLISHING"] = 14] = "AWAITING_PUBLISHING";
    FileStatus[FileStatus["FAILED_PUBLISHING"] = 155] = "FAILED_PUBLISHING";
})(FileStatus = exports.FileStatus || (exports.FileStatus = {}));
var FileRelationType;
(function (FileRelationType) {
    FileRelationType[FileRelationType["EMBEDDED_LIBRARY"] = 1] = "EMBEDDED_LIBRARY";
    FileRelationType[FileRelationType["OPTIONAL_DEPENDENCY"] = 2] = "OPTIONAL_DEPENDENCY";
    FileRelationType[FileRelationType["REQUIRED_DEPENDENCY"] = 3] = "REQUIRED_DEPENDENCY";
    FileRelationType[FileRelationType["TOOL"] = 4] = "TOOL";
    FileRelationType[FileRelationType["INCOMPATIBLE"] = 5] = "INCOMPATIBLE";
    FileRelationType[FileRelationType["INCLUDE"] = 6] = "INCLUDE";
})(FileRelationType = exports.FileRelationType || (exports.FileRelationType = {}));
var ModsSearchSortField;
(function (ModsSearchSortField) {
    ModsSearchSortField[ModsSearchSortField["FEATURED"] = 1] = "FEATURED";
    ModsSearchSortField[ModsSearchSortField["POPULARITY"] = 2] = "POPULARITY";
    ModsSearchSortField[ModsSearchSortField["LAST_UPDATED"] = 3] = "LAST_UPDATED";
    ModsSearchSortField[ModsSearchSortField["NAME"] = 4] = "NAME";
    ModsSearchSortField[ModsSearchSortField["AUTHOR"] = 5] = "AUTHOR";
    ModsSearchSortField[ModsSearchSortField["TOTAL_DOWNLOADS"] = 6] = "TOTAL_DOWNLOADS";
    ModsSearchSortField[ModsSearchSortField["CATEGORY"] = 7] = "CATEGORY";
    ModsSearchSortField[ModsSearchSortField["GAME_VERSION"] = 8] = "GAME_VERSION";
})(ModsSearchSortField = exports.ModsSearchSortField || (exports.ModsSearchSortField = {}));
var ModStatus;
(function (ModStatus) {
    ModStatus[ModStatus["NEW"] = 1] = "NEW";
    ModStatus[ModStatus["CHANGES_REQUIRED"] = 2] = "CHANGES_REQUIRED";
    ModStatus[ModStatus["UNDER_SOFT_REVIEW"] = 3] = "UNDER_SOFT_REVIEW";
    ModStatus[ModStatus["APPROVED"] = 4] = "APPROVED";
    ModStatus[ModStatus["REJECTED"] = 5] = "REJECTED";
    ModStatus[ModStatus["CHANGES_MADE"] = 6] = "CHANGES_MADE";
    ModStatus[ModStatus["INACTIVE"] = 7] = "INACTIVE";
    ModStatus[ModStatus["ABANDONED"] = 8] = "ABANDONED";
    ModStatus[ModStatus["DELETED"] = 9] = "DELETED";
    ModStatus[ModStatus["UNDER_REVIEW"] = 10] = "UNDER_REVIEW";
})(ModStatus = exports.ModStatus || (exports.ModStatus = {}));
var ModLoaderType;
(function (ModLoaderType) {
    ModLoaderType[ModLoaderType["ANY"] = 0] = "ANY";
    ModLoaderType[ModLoaderType["FORGE"] = 1] = "FORGE";
    ModLoaderType[ModLoaderType["CAULDRON"] = 2] = "CAULDRON";
    ModLoaderType[ModLoaderType["LITE_LOADER"] = 3] = "LITE_LOADER";
    ModLoaderType[ModLoaderType["FABRIC"] = 4] = "FABRIC";
})(ModLoaderType = exports.ModLoaderType || (exports.ModLoaderType = {}));
var FileHashAlgorithms;
(function (FileHashAlgorithms) {
    FileHashAlgorithms[FileHashAlgorithms["SHA1"] = 1] = "SHA1";
    FileHashAlgorithms[FileHashAlgorithms["MD5"] = 2] = "MD5";
})(FileHashAlgorithms = exports.FileHashAlgorithms || (exports.FileHashAlgorithms = {}));
//# sourceMappingURL=enums.js.map