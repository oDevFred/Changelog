"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorServiceUnavailable = exports.ErrorInternalServer = exports.ErrorBadRequest = exports.ErrorNotFound = void 0;
/**
 * Error getting thrown if the requested resource could not be found.
 */
var ErrorNotFound = /** @class */ (function (_super) {
    __extends(ErrorNotFound, _super);
    function ErrorNotFound() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = "Not Found";
        _this.message = "The requested resource could not be found.";
        _this.code = 404;
        return _this;
    }
    return ErrorNotFound;
}(Error));
exports.ErrorNotFound = ErrorNotFound;
/**
 * Error getting thrown if the request contains a malformed request body.
 */
var ErrorBadRequest = /** @class */ (function (_super) {
    __extends(ErrorBadRequest, _super);
    function ErrorBadRequest() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = "Bad Request";
        _this.message = "The request is malformed and won't be processed.";
        _this.code = 400;
        return _this;
    }
    return ErrorBadRequest;
}(Error));
exports.ErrorBadRequest = ErrorBadRequest;
/**
 * Error getting thrown if the server processing request throws an error. This is not a client error.
 */
var ErrorInternalServer = /** @class */ (function (_super) {
    __extends(ErrorInternalServer, _super);
    function ErrorInternalServer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = "Internal Server Error";
        _this.message = "Something on the server happened that made it impossible to resolve the request.";
        _this.code = 500;
        return _this;
    }
    return ErrorInternalServer;
}(Error));
exports.ErrorInternalServer = ErrorInternalServer;
/**
 * Error getting thrown if the service isn't available at the current time.
 */
var ErrorServiceUnavailable = /** @class */ (function (_super) {
    __extends(ErrorServiceUnavailable, _super);
    function ErrorServiceUnavailable() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = "Service Unavailable";
        _this.message = "The service currently is not available.";
        _this.code = 503;
        return _this;
    }
    return ErrorServiceUnavailable;
}(Error));
exports.ErrorServiceUnavailable = ErrorServiceUnavailable;
//# sourceMappingURL=exceptions.js.map